name: Validate

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  conventional-commits:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate conventional commits
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: |
            module.exports = {
              extends: ['@commitlint/config-conventional'],
              rules: {
                'type-enum': [2, 'always', [
                  'feat', 'fix', 'docs', 'style', 'refactor', 
                  'perf', 'test', 'chore', 'ci', 'build', 'revert'
                ]],
                'subject-case': [2, 'never', ['pascal-case', 'upper-case']],
                'subject-max-length': [2, 'always', 72],
                'body-max-line-length': [2, 'always', 100]
              }
            }

  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -v ./...

      - name: Build binary
        run: go build -o editorlint cmd/editorlint/main.go

      - name: Test binary works
        run: |
          echo "test line with trailing spaces   " > test.txt
          ./editorlint test.txt && echo "Test failed: should have found violations" && exit 1 || echo "Test passed: found violations as expected"
          
          ./editorlint --fix test.txt
          ./editorlint test.txt && echo "Test passed: no violations after fix" || (echo "Test failed: should have no violations after fix" && exit 1)

  test-action:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Test action - validate mode
        uses: ./
        with:
          path: '.'
          recurse: true
          output-format: 'tabular'
          fail-on-violations: false
        id: validate
      
      - name: Check outputs
        shell: bash
        run: |
          echo "Violations found: ${{ steps.validate.outputs.violations-found }}"
          echo "Files processed: ${{ steps.validate.outputs.files-processed }}"
          echo "Files fixed: ${{ steps.validate.outputs.files-fixed }}"