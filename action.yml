name: 'EditorConfig Lint'
description: 'Validates and fixes files according to .editorconfig rules'
branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  # Expected parameters from proscia-techops workflows
  fix:
    description: 'Automatically fix violations instead of just reporting them'
    required: false
    default: 'false'

  config:
    description: 'Path to custom .editorconfig file (optional)'
    required: false
    default: ''

  exclude:
    description: 'Comma-separated list of glob patterns to ignore (e.g. "*.tmp,node_modules/**")'
    required: false
    default: ''

  reporter:
    description: 'Output format: default, tabular, json, quiet, github'
    required: false
    default: 'default'

  token:
    description: 'GitHub token for API access (when using github reporter)'
    required: false
    default: ''

  # Additional parameters for flexibility
  version:
    description: 'Version of editorlint to use (e.g. "1.0.0" or "latest")'
    required: false
    default: 'latest'

  path:
    description: 'Path to file or directory to validate'
    required: false
    default: '.'

  recurse:
    description: 'Process files recursively in directories'
    required: false
    default: 'true'

  fail-on-violations:
    description: 'Fail the action if violations are found'
    required: false
    default: 'true'

  auto-commit:
    description: 'Automatically commit fixes when fix=true'
    required: false
    default: 'false'

  commit-message:
    description: 'Commit message for auto-committed fixes'
    required: false
    default: 'fix: auto-fix editorconfig violations'

  git-user-name:
    description: 'Git user name for auto-commits'
    required: false
    default: 'github-actions[bot]'

  git-user-email:
    description: 'Git user email for auto-commits'
    required: false
    default: 'github-actions[bot]@users.noreply.github.com'

  # Legacy parameter names for backward compatibility
  config-file:
    description: 'Path to custom .editorconfig file (legacy - use config instead)'
    required: false
    default: ''

  output-format:
    description: 'Output format (legacy - use reporter instead)'
    required: false
    default: 'default'

outputs:
  violations-found:
    description: 'Whether any violations were found (true/false)'

  files-processed:
    description: 'Number of files processed'

  files-fixed:
    description: 'Number of files fixed (when fix=true)'

runs:
  using: 'composite'
  steps:
    - name: Run EditorConfig Lint (Windows)
      if: runner.os == 'Windows'
      uses: ./action-windows.yml
      with:
        version: ${{ inputs.version }}
        path: ${{ inputs.path }}
        config-file: ${{ inputs.config-file || inputs.config }}
        recurse: ${{ inputs.recurse }}
        fix: ${{ inputs.fix }}
        output-format: ${{ inputs.output-format || inputs.reporter }}
        fail-on-violations: ${{ inputs.fail-on-violations }}
        auto-commit: ${{ inputs.auto-commit }}
        commit-message: ${{ inputs.commit-message }}
        git-user-name: ${{ inputs.git-user-name }}
        git-user-email: ${{ inputs.git-user-email }}
        ignore-patterns: ${{ inputs.exclude }}

    - name: Run EditorConfig Lint (Linux)
      if: runner.os == 'Linux'
      uses: ./action-linux.yml
      with:
        version: ${{ inputs.version }}
        path: ${{ inputs.path }}
        config-file: ${{ inputs.config-file || inputs.config }}
        recurse: ${{ inputs.recurse }}
        fix: ${{ inputs.fix }}
        output-format: ${{ inputs.output-format || inputs.reporter }}
        fail-on-violations: ${{ inputs.fail-on-violations }}
        auto-commit: ${{ inputs.auto-commit }}
        commit-message: ${{ inputs.commit-message }}
        git-user-name: ${{ inputs.git-user-name }}
        git-user-email: ${{ inputs.git-user-email }}
        ignore-patterns: ${{ inputs.exclude }}

    - name: Run EditorConfig Lint (macOS)
      if: runner.os == 'macOS'
      uses: ./action-macos.yml
      with:
        version: ${{ inputs.version }}
        path: ${{ inputs.path }}
        config-file: ${{ inputs.config-file || inputs.config }}
        recurse: ${{ inputs.recurse }}
        fix: ${{ inputs.fix }}
        output-format: ${{ inputs.output-format || inputs.reporter }}
        fail-on-violations: ${{ inputs.fail-on-violations }}
        auto-commit: ${{ inputs.auto-commit }}
        commit-message: ${{ inputs.commit-message }}
        git-user-name: ${{ inputs.git-user-name }}
        git-user-email: ${{ inputs.git-user-email }}
        ignore-patterns: ${{ inputs.exclude }}
